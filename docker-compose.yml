version: '3.8'

services:
  # Backend Go Application with Air for live-reloading
  backend:
    image: golang:1.21-alpine
    container_name: k2ray-backend-dev
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8080:8080" # Expose app port
      - "5050:5050" # Expose debugger port (if needed)
    environment:
      - GIN_MODE=debug
      - APP_ENV=dev
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=k2ray
      - DB_PASSWORD=k2ray_password
      - DB_NAME=k2ray_db
      - REDIS_ADDR=redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    # Install air and run it
    command: >
      sh -c "
        apk add --no-cache curl &&
        curl -sSfL https://raw.githubusercontent.com/cosmtrek/air/master/install.sh | sh -s -- -b /go/bin &&
        /go/bin/air -c .air.toml
      "
    networks:
      - k2ray-net

  # Frontend Vue.js Application with Vite dev server
  frontend:
    image: node:20-alpine
    container_name: k2ray-frontend-dev
    working_dir: /app
    volumes:
      - ./web:/app
    ports:
      - "5173:5173" # Vite's default port
    command: sh -c "npm install && npm run dev -- --host"
    networks:
      - k2ray-net

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: k2ray-db-dev
    environment:
      POSTGRES_USER: k2ray
      POSTGRES_PASSWORD: k2ray_password
      POSTGRES_DB: k2ray_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U k2ray -d k2ray_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - k2ray-net

  # Redis
  redis:
    image: redis:7-alpine
    container_name: k2ray-redis-dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - k2ray-net

volumes:
  postgres-data:
    driver: local

networks:
  k2ray-net:
    driver: bridge